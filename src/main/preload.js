const { contextBridge, ipcRenderer } = require('electron')

contextBridge.exposeInMainWorld('electronAPI', {
    loadView: (viewFile) => ipcRenderer.invoke('load-view', viewFile),
    getAllMembers: (organization) => ipcRenderer.invoke('get-all-members', organization),
    getRegularEvents: (organization) => ipcRenderer.invoke('get-regular-events', organization),
    getExtraEvents: () => ipcRenderer.invoke('get-extra-events'),
    addMember: (first_name, last_name, organization) => ipcRenderer.invoke('add-member', first_name, last_name, organization),
    getMember: (member_id) => ipcRenderer.invoke('get-member', member_id),
    deleteMember: (first_name, last_name, member_id) => ipcRenderer.invoke('delete-member', first_name, last_name, member_id),
    addEvent: (event_date, event_type, organization, extra_event) => ipcRenderer.invoke('add-event', event_date, event_type, organization, extra_event),
    removeEvent: (event_id) => ipcRenderer.invoke('remove-event', event_id),
    recordAttendance: (event_id, present_members) => ipcRenderer.invoke('record-attendance', event_id, present_members),
    getAllAttendance: () => ipcRenderer.invoke('get-all-attendance'),
    getMemberRegularEventCount: (member_id, event_type) => ipcRenderer.invoke('get-member-regular-event-count', member_id, event_type),
    getMemberExtraEventCount: (member_id, event_type) => ipcRenderer.invoke('get-member-extra-event-count', member_id, event_type),
    getRegularEventCount: (event_type, organization) => ipcRenderer.invoke('get-regular-event-count', event_type, organization),
    getTotalEventCount: (organization) => ipcRenderer.invoke('get-total-event-count', organization),
    getAttendedEvents: (event_type, member_id) => ipcRenderer.invoke('get-attended-events', event_type, member_id),
    getEventAttendance: (event_id) => ipcRenderer.invoke('get-event-attendance', event_id),
    getEvent: (event_id) => ipcRenderer.invoke('get-event', event_id),
    getAllEvents: (organization) => ipcRenderer.invoke('get-all-events', organization),
    setOrganization: (organization) => ipcRenderer.invoke('set-organization', organization),
    getOrganization: () => ipcRenderer.invoke('get-organization'),
    showSaveDialog: (defaultFileName) => ipcRenderer.invoke('show-save-dialog', defaultFileName),
    generateStatsPDF: (filePath, members, eventTypes) => ipcRenderer.invoke('generate-stats-pdf', filePath, members, eventTypes),
    addOrganization: (orgName) => ipcRenderer.invoke('add-organization', orgName),
    deleteOrganization: (orgName) => ipcRenderer.invoke('delete-organization', orgName),
    getAllOrganizations: () => ipcRenderer.invoke('get-all-organizations'),
    getSetting: (key) => ipcRenderer.invoke('get-setting', key),
    setSetting: (key, value) => ipcRenderer.invoke('set-setting', key, value),
    addEventType: (organization, eventType) => ipcRenderer.invoke('add-event-type', organization, eventType),
    getAllEventTypes: (organization) => ipcRenderer.invoke('get-event-types', organization),
    removeEventType: (organization, eventType) => ipcRenderer.invoke('remove-event-type', organization, eventType),
    getExtraEventsForMember: (member_id) => ipcRenderer.invoke('get-extra-events-for-member', member_id)
})